{"version":3,"file":"playnix.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;;IAEMG;;;;;;;;;;;;;;AAEF;AACJ;AACA;AACA;AACA;AACI,oBAAOC,GAAP,EAAYC,OAAZ,EACA;AACIJ,MAAAA,2DAAA,CAAcG,GAAd,EAAmBC,OAAnB;AACA,WAAKA,OAAL,GAAeJ,8DAAf;AACA,WAAKA,QAAL,GAAgBA,sDAAhB;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,oBAAWM,MAAX,EAAmBC,GAAnB,EACA;AACI,UAAIC,KAAK,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,IAAN,CAAWJ,MAAX,EAAmBC,GAAnB,EAAwB,IAAxB;AACAC,MAAAA,KAAK,CAACG,gBAAN,CAAuB,cAAvB,EAAuC,kBAAvC;AACA,aAAOH,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,sBAAaI,GAAb,EAAkBC,QAAlB,EAA4BC,KAA5B,EACA;AAAA;;AACI,UAAIC,IAAI,GAAG;AACPH,QAAAA,GAAG,EAAHA,GADO;AAEPE,QAAAA,KAAK,EAALA,KAFO;AAGPE,QAAAA,MAAM,EAAC,KAAKC;AAHL,OAAX;AAMA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,GAAG,GAAG,KAAI,CAACC,UAAL,CAAgB,MAAhB,YAA2B,KAAI,CAAClB,OAAL,CAAamB,QAAxC,cAAoD,KAAI,CAACnB,OAAL,CAAaoB,GAAjE,mBAA6EX,QAA7E,EAAV;;AAEAQ,QAAAA,GAAG,CAACI,MAAJ,GAAa,YAAM;AACf,cAAIJ,GAAG,CAACK,MAAJ,IAAc,GAAlB,EACA;AACI,gBAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,YAAf,CAAX;AACA,iBAAI,CAAChB,KAAL,GAAaa,IAAI,CAACb,KAAlB;AACA,mBAAOa,IAAI,CAACb,KAAZ;AACAK,YAAAA,OAAO,CAACQ,IAAD,CAAP;AACH,WAND,MAQA;AACIP,YAAAA,MAAM,CAACC,GAAG,CAACU,UAAL,CAAN;AACH;AACJ,SAZD;;AAaAV,QAAAA,GAAG,CAACW,OAAJ,GAAc;AAAA,iBAAMZ,MAAM,CAACC,GAAG,CAACU,UAAL,CAAZ;AAAA,SAAd;;AACAV,QAAAA,GAAG,CAACY,IAAJ,CAASL,IAAI,CAACM,SAAL,CAAenB,IAAf,CAAT;AACH,OAlBM,CAAP;AAmBH;;;WAED,0BACA;AACI,YAAM,IAAIoB,KAAJ,CAAU,mFAAV,CAAN;AACH;AAED;AACJ;AACA;AACA;;;;WACI,sBAAapB,IAAb,EACA;AAAA;;AACI,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,GAAG,GAAG,MAAI,CAACC,UAAL,CAAgB,MAAhB,YAA2B,MAAI,CAAClB,OAAL,CAAamB,QAAxC,cAAoD,MAAI,CAACnB,OAAL,CAAaoB,GAAjE,iBAAV;;AACAH,QAAAA,GAAG,CAACV,gBAAJ,CAAqB,eAArB,mBAAgD,MAAI,CAACG,KAArD;;AAEAO,QAAAA,GAAG,CAACI,MAAJ,GAAa,YAAM;AACf,cAAIJ,GAAG,CAACK,MAAJ,IAAc,GAAlB,EACA;AACIP,YAAAA,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,YAAf,CAAD,CAAP;AACH,WAHD,MAKA;AACIV,YAAAA,MAAM,CAACC,GAAG,CAACU,UAAL,CAAN;AACH;AACJ,SATD;;AAUAV,QAAAA,GAAG,CAACW,OAAJ,GAAc;AAAA,iBAAMZ,MAAM,CAACC,GAAG,CAACU,UAAL,CAAZ;AAAA,SAAd;;AACAV,QAAAA,GAAG,CAACY,IAAJ,CAASL,IAAI,CAACM,SAAL,CAAenB,IAAf,CAAT;AACH,OAhBM,CAAP;AAiBH;AAED;AACJ;AACA;;;;WACI,wBACA;AAAA;;AACI,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,GAAG,GAAG,MAAI,CAACC,UAAL,CAAgB,KAAhB,YAA0B,MAAI,CAAClB,OAAL,CAAamB,QAAvC,cAAmD,MAAI,CAACnB,OAAL,CAAaoB,GAAhE,iBAAV;;AACAH,QAAAA,GAAG,CAACV,gBAAJ,CAAqB,eAArB,mBAAgD,MAAI,CAACG,KAArD;;AAEAO,QAAAA,GAAG,CAACI,MAAJ,GAAa,YAAM;AACf,cAAIJ,GAAG,CAACK,MAAJ,IAAc,GAAlB,EACA;AACIP,YAAAA,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,YAAf,CAAD,CAAP;AACH,WAHD,MAKA;AACIV,YAAAA,MAAM,CAACC,GAAG,CAACU,UAAL,CAAN;AACH;AACJ,SATD;;AAUAV,QAAAA,GAAG,CAACW,OAAJ,GAAc;AAAA,iBAAMZ,MAAM,CAACC,GAAG,CAACU,UAAL,CAAZ;AAAA,SAAd;;AACAV,QAAAA,GAAG,CAACY,IAAJ;AACH,OAhBM,CAAP;AAiBH;;;;EAlHwBlC;;AAqH7B,IAAMqC,SAAS,GAAG,IAAIlC,cAAJ,EAAlB;AACA,iEAAekC,SAAf;;;;;;;;;;;;;;;;;;AC3H4C;AACN;AACtC;AACA,8BAA8B,wDAAc;AAC5C;AACA;AACA;AACA,0BAA0B,kDAAQ;AAClC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,QAAQ;;;;;;;;;;;;;;;;;;;;;;ACvC0B;AACjD;AACkD;AAClD;AAC6D;AAC7D;;;;;;;;;;;;;;;;;;;;;ACLA;AACuC;AACS;AACF;AACT;AACyB;AAC9D;AACA,+BAA+B,mDAAS;AACxC;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA,oCAAoC,qDAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,0BAA0B,+DAAwB;AAClD,2BAA2B,+DAAwB;AACnD,6BAA6B,iEAA0B;AACvD,uBAAuB,4DAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qDAAiB;AAC3C;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0EAA+B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;;ACxFxB;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACe;AACf;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3De;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3Ce;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChCkD;AAClD;AAC4D;AAC5D;;;;;;;;;;;;;;;;;;ACHyF;AAC7D;AAC5B;AACe,wBAAwB,wDAAa;AACpD;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,4BAA4B,oDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAqC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,aAAa,yDAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,aAAa,yDAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA,sBAAsB,kDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA,sBAAsB,gDAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5I+C;AAC/C;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ,6BAA6B;AACpD,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;;;;;;;;;;;;;;;;AC1F4C;AAC5C;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mEAAwB,CAAC,kEAAuB,CAAC,kEAAuB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3GuC;AACF;AACD;AACJ;AAChC;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAuB,6DAA6D;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4CAAa;AAC5B;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6DAA8B;AAC3D;AACA,2BAA2B,yBAAyB;AACpD;AACA,6BAA6B,6DAA8B;AAC3D;AACA,2BAA2B,yBAAyB;AACpD;AACA,6BAA6B,+DAAgC;AAC7D;AACA,2BAA2B,2BAA2B;AACtD;AACA,qDAAqD,sBAAsB,GAAG,iBAAiB,EAAE,KAAK;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;;;;;;;;;;;;;;ACpTA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iEAAe,aAAa;;;;;;;;;;;;;;;;;ACbS;AACL;AAChC;AACe,oBAAoB,6CAAO;AAC1C;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,oBAAoB,6DAA8B;AAClD;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvBqC;AACL;AAChC;AACe,wBAAwB,6CAAO;AAC9C;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,oBAAoB,6DAA8B;AAClD;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA,qBAAqB,uDAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDkD;AAClD;AACyC;AACzC;AACiD;AACjD;AAC6C;AAC7C;AAC+C;AAC/C;AACkD;AAClD;;;;;;;;;;;;;;;;;ACXqC;AACrC;AACe;AACf;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,oBAAoB,+DAAgC;AACpD;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,mBAAmB,6DAA6D;AAChF;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,eAAe,OAAW;AAC1B;AACA;;;;;;;;;;;;;;;AC9EA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,YAAY,QAAQ;AACpB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA,iEAAe,cAAc;;;;;;;;;;;;;;;ACrCd;AACf;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA;;AAEA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8CAA8C,EAAE;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sDAAsD;AACtD;;AAEA,sBAAsB;AACtB;;AAEA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,MAAM;AACxC;;AAEA,+CAA+C;AAC/C;;AAEA,uBAAuB;AACvB;;AAEA,+BAA+B,gDAAgD;AAC/E;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,IAAI,WAAW,IAAI;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA,sBAAsB,SAAS;AAC/B;AACA,kCAAkC;AAClC;;AAEA;AACA,oDAAoD,EAAE;AACtD;AACA,kCAAkC;AAClC;AACA,mBAAmB,IAAI,yBAAyB;AAChD;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,0BAA0B,EAAE;AAC5B;;AAEA;AACA;AACA,wBAAwB,EAAE,oBAAoB;AAC9C;;AAEA;AACA,0BAA0B,EAAE,aAAa;AACzC;;AAEA;AACA;AACA;AACA,sCAAsC,IAAI;AAC1C;AACA,iCAAiC,IAAI;AACrC;;AAEA;AACA,gCAAgC,EAAE,oBAAoB,GAAG,GAAG,aAAa,IAAI;AAC7E;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,yEAAyE,EAAE,WAAW,EAAE;AACxF;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,qBAAqB,kBAAkB,IAAI;AAC3C;;AAEA;AACA,+BAA+B,EAAE,6DAA6D,IAAI;AAClG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;;AAEA;AACA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA,2CAA2C,KAAK;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,MAAM,IAAI;;AAE9B;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA,qBAAqB;AACrB,yBAAyB,GAAG;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB,UAAU;AAC7B,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B,IAAI;AAClD,eAAe,2BAA2B,EAAE;AAC5C,oCAAoC,IAAI;AACxC;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,eAAe,kBAAkB,IAAI;AACrC;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA,eAAe,WAAW,EAAE;AAC5B;AACA,cAAc;AACd;AACA,cAAc,QAAQ,EAAE;AACxB;AACA,eAAe,aAAa,EAAE;AAC9B;AACA,eAAe,aAAa,EAAE;AAC9B;AACA,eAAe;AACf;AACA,eAAe,aAAa,EAAE;AAC9B,eAAe,kCAAkC,EAAE;AACnD;AACA,eAAe,cAAc,IAAI;AACjC;AACA,eAAe,sBAAsB,IAAI;AACzC;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA,cAAc;AACd;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,4BAA4B;AAC5B;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB,oBAAoB,cAAc;AACrD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,8CAA8C,SAAS,IAAI,IAAI;AAC/D;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA,4BAA4B,UAAU,IAAI;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,IAAI;AAC5B;AACA,uBAAuB,MAAM;AAC7B;AACA,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA,gCAAgC,IAAI,EAAE;AACtC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,IAAI;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,IAAI,+BAA+B;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,sBAAsB;AACtB;AACA,2CAA2C;AAC3C;AACA,+BAA+B;AAC/B;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;;AAEnC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,IAAI,gCAAgC,IAAI;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAa;AACzB;AACA;AACA,QAAQ,gBAAgB;AACxB,MAAM;AACN;AACA,YAAY,IAA2C;AACvD,YAAY,mCAAO;AACnB;AACA,aAAa;AAAA,kGAAC;AACd,UAAU,KAAK,EAGN;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;UCp4BD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://playnix-browser/webpack/universalModuleDefinition","webpack://playnix-browser/./src/playnix.js","webpack://playnix-browser/./node_modules/lognetic-browser/src/device.informer.js","webpack://playnix-browser/./node_modules/lognetic-browser/src/index.js","webpack://playnix-browser/./node_modules/lognetic-browser/src/log.client.js","webpack://playnix-browser/./node_modules/lognetic-browser/src/murmurhash3.js","webpack://playnix-browser/./node_modules/lognetic-browser/src/web.helper.js","webpack://playnix-browser/./node_modules/playnix-core/src/device.informer.js","webpack://playnix-browser/./node_modules/playnix-core/src/index.js","webpack://playnix-browser/./node_modules/playnix-core/src/log.client.js","webpack://playnix-browser/./node_modules/playnix-core/src/playnix.base.js","webpack://playnix-browser/./node_modules/playnix-core/src/utils.js","webpack://playnix-browser/./node_modules/playnix-types/src/client.js","webpack://playnix-browser/./node_modules/playnix-types/src/config.js","webpack://playnix-browser/./node_modules/playnix-types/src/event.js","webpack://playnix-browser/./node_modules/playnix-types/src/exception.js","webpack://playnix-browser/./node_modules/playnix-types/src/index.js","webpack://playnix-browser/./node_modules/playnix-types/src/message.js","webpack://playnix-browser/./node_modules/playnix-types/src/options.js","webpack://playnix-browser/./node_modules/playnix-types/src/response.js","webpack://playnix-browser/./node_modules/ua-parser-js/src/ua-parser.js","webpack://playnix-browser/webpack/bootstrap","webpack://playnix-browser/webpack/runtime/compat get default export","webpack://playnix-browser/webpack/runtime/define property getters","webpack://playnix-browser/webpack/runtime/hasOwnProperty shorthand","webpack://playnix-browser/webpack/runtime/make namespace object","webpack://playnix-browser/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","\r\nimport {PlaynixBaseClient} from 'playnix-core';\r\nimport {lognetic} from 'lognetic-browser';\r\nimport { PlaynixOptions } from 'playnix-types';\r\n\r\nclass PlaynixSession extends PlaynixBaseClient\r\n{\r\n    /**\r\n    * @protected\r\n    * @param {String} key\r\n    * @param {PlaynixOptions} options\r\n    */\r\n    _setup(key, options)\r\n    {\r\n        lognetic.init(key, options);\r\n        this.options = lognetic.options;\r\n        this.lognetic = lognetic;              \r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} method\r\n     * @param {String} url\r\n     */\r\n    _createXHR(method, url)\r\n    {\r\n        let xhttp = new XMLHttpRequest();\r\n        xhttp.open(method, url, true);\r\n        xhttp.setRequestHeader('Content-Type', 'application/json');\r\n        return xhttp;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {String} sid Social prodiver user Id\r\n     * @param {String} provider Social provider ie {Goole, Facebook}\r\n     * @param {String} token Access token generated from social login\r\n     */\r\n    authenticate(sid, provider, token) \r\n    {\r\n        let data = {\r\n            sid,\r\n            token,\r\n            client:this.game\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = this._createXHR('POST', `${this.options.protocol}:${this.options.uri}/auth/${provider}`);\r\n            \r\n            xhr.onload = () => {\r\n                if (xhr.status == 200) \r\n                {\r\n                    let resp = JSON.parse(xhr.responseText);\r\n                    this.token = resp.token;\r\n                    delete resp.token;\r\n                    resolve(resp);\r\n                } \r\n                else \r\n                {\r\n                    reject(xhr.statusText);\r\n                }\r\n            };\r\n            xhr.onerror = () => reject(xhr.statusText);\r\n            xhr.send(JSON.stringify(data));\r\n        });\r\n    }\r\n\r\n    getLoginStatus() \r\n    {\r\n        throw new Error('NotImplementedException: This method was not implemented for the target framework');\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Object} data Player data\r\n     */\r\n    saveGameData(data) \r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = this._createXHR('POST', `${this.options.protocol}:${this.options.uri}/api/player`);\r\n            xhr.setRequestHeader('Authorization', `Bearer ${this.token}`);\r\n            \r\n            xhr.onload = () => {\r\n                if (xhr.status == 200) \r\n                {\r\n                    resolve(JSON.parse(xhr.responseText));\r\n                } \r\n                else \r\n                {\r\n                    reject(xhr.statusText);\r\n                }\r\n            };\r\n            xhr.onerror = () => reject(xhr.statusText);\r\n            xhr.send(JSON.stringify(data));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    loadGameData() \r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = this._createXHR('GET', `${this.options.protocol}:${this.options.uri}/api/player`);\r\n            xhr.setRequestHeader('Authorization', `Bearer ${this.token}`);\r\n            \r\n            xhr.onload = () => {\r\n                if (xhr.status == 200)\r\n                {\r\n                    resolve(JSON.parse(xhr.responseText));\r\n                } \r\n                else \r\n                {\r\n                    reject(xhr.statusText);\r\n                }\r\n            };\r\n            xhr.onerror = () => reject(xhr.statusText);\r\n            xhr.send();\r\n        });\r\n    }\r\n}\r\n\r\nconst singleton = new PlaynixSession();\r\nexport default singleton;","import {DeviceInformer} from 'playnix-core';\r\nimport {UAParser} from 'ua-parser-js';\r\n\r\nclass BrowserInformer extends DeviceInformer\r\n{\r\n    init()\r\n    {\r\n        this.parser = new UAParser();\r\n    }\r\n\r\n    /**\r\n     * @returns {{name:String,version:String}}\r\n     */\r\n    getOS() \r\n    {\r\n        let browserData = this.parser.getResult();\r\n        return browserData.os;\r\n    }\r\n\r\n    /**\r\n    * @returns {{vendor:String,model:String}}\r\n    */\r\n    getDevice() \r\n    {\r\n        let browserData = this.parser.getResult();\r\n        return browserData.device;\r\n    }\r\n\r\n    /**\r\n    * @returns {{name:String,version:String}}\r\n    */\r\n    getEngine() \r\n    {\r\n        let browserData = this.parser.getResult();\r\n        return browserData.engine;\r\n    }\r\n}\r\n\r\nconst instance = new BrowserInformer();\r\nexport default instance;","export {default as lognetic} from './log.client';\r\n\r\nexport {default as WebHelper} from './web.helper';\r\n\r\nexport {default as BrowserInformer} from './device.informer';\r\n\r\nexport {default as murmurhash3_32_gc} from './murmurhash3';","\r\nimport {LogClient} from 'playnix-core';\r\nimport BrowserInformer from './device.informer';\r\nimport murmurhash3_32_gc from './murmurhash3';\r\nimport WebHelper from './web.helper';\r\nimport { LoggingConfig, PlaynixOptions } from 'playnix-types';\r\n\r\nclass BrowserLogClient extends LogClient\r\n{\r\n    /**\r\n    * @public\r\n    * @description Initializes playnix's logging client for browsers.\r\n    * @param {String} key\r\n    * @param {PlaynixOptions} options\r\n    */\r\n    init(key, options)\r\n    {\r\n        this.registerDeviceInformer(BrowserInformer);\r\n        super.init(key, options);\r\n        \r\n        window.onerror = this._onerror.bind(this);\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        this._console = {};\r\n    }\r\n\r\n    generateClientId() \r\n    {\r\n        let bar = '|';\r\n        /**\r\n         * @type {import('ua-parser-js')}\r\n         */\r\n        let parser = this.deviceInformer.parser;\r\n        let browserData = parser.getResult();\r\n        let userAgent = browserData.ua;\r\n        let screenPrint = WebHelper.getScreenPrint();\r\n        let localStorage = WebHelper.isLocalStorage();\r\n        let sessionStorage = WebHelper.isSessionStorage();\r\n        let timeZone = WebHelper.getTimeZone();\r\n        let language = navigator.language;\r\n        let systemLanguage = navigator.systemLanguage;\r\n        let cookies = navigator.cookieEnabled;\r\n  \r\n        let key = userAgent + bar + screenPrint + bar + localStorage + bar + sessionStorage + bar + timeZone + bar + language + bar + systemLanguage + bar + cookies;\r\n        let seed = 256;\r\n        \r\n        this._client_id = murmurhash3_32_gc(key, seed);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} msg \r\n     * @param {String} file \r\n     * @param {String} line \r\n     * @param {Number} col \r\n     * @param {Error} error \r\n     */\r\n    _onerror(msg, file, line, col, error)\r\n    {\r\n        if (!error) return;\r\n        this.writeException(error);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {string} action \r\n     */\r\n    _onconsole(action)\r\n    {        \r\n\r\n        this._console[action] = console[action];\r\n        console[action] = () => {\r\n            if (action == LoggingConfig.LOG_TRIGGER.ERROR)\r\n            {\r\n                this.writeException(arguments);\r\n            }\r\n            else\r\n            {\r\n                this.writeMessage(JSON.stringify(arguments));\r\n            }\r\n            this._console[action].apply(console, arguments);\r\n        };\r\n    }\r\n}\r\n\r\nconst singleton = new BrowserLogClient();\r\nexport default singleton;","/**\r\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\r\n */\r\n\r\n/**\r\n * @param {String} key \r\n * @param {Number} seed \r\n */\r\nexport default function murmurhash3_32_gc(key, seed) \r\n{\r\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\r\n\r\n\tremainder = key.length & 3; // key.length % 4\r\n\tbytes = key.length - remainder;\r\n\th1 = seed;\r\n\tc1 = 0xcc9e2d51;\r\n\tc2 = 0x1b873593;\r\n\ti = 0;\r\n\r\n\twhile (i < bytes) {\r\n\t  \tk1 =\r\n\t  \t  ((key.charCodeAt(i) & 0xff)) |\r\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\r\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\r\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\r\n\t\t++i;\r\n\r\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\r\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\r\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\r\n\r\n\t\th1 ^= k1;\r\n        h1 = (h1 << 13) | (h1 >>> 19);\r\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\r\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\r\n\t}\r\n\r\n\tk1 = 0;\r\n\r\n\tswitch (remainder) {\r\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\r\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\r\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\r\n\r\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\r\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\r\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\r\n\t\th1 ^= k1;\r\n\t}\r\n\r\n\th1 ^= key.length;\r\n\r\n\th1 ^= h1 >>> 16;\r\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\r\n\th1 ^= h1 >>> 13;\r\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\r\n\th1 ^= h1 >>> 16;\r\n\r\n\treturn h1 >>> 0;\r\n}","export default class WebHelper \r\n{\r\n  constructor() \r\n  {\r\n    throw new Error('This is a static class');\r\n  }\r\n\r\n  static isLocalStorage() \r\n  {\r\n    try \r\n    {\r\n      return !!window.localStorage;\r\n    }\r\n    catch (e) \r\n    {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static isSessionStorage() \r\n  {\r\n    try \r\n    {\r\n      return !!window.sessionStorage;\r\n    }\r\n    catch (e) \r\n    {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static getScreenPrint() \r\n  {\r\n    return \"Current Resolution: \" + screen.width + \"x\" + screen.height\r\n      + \", Available Resolution: \" + screen.availWidth + \"x\" + screen.availHeight\r\n      + \", Color Depth: \" + screen.colorDepth + \", Device XDPI: \" + screen.deviceXDPI +\r\n      \", Device YDPI: \" + screen.deviceYDPI;\r\n  }\r\n\r\n  static getTimeZone() \r\n  {\r\n    return String(String(new Date()).split(\"(\")[1]).split(\")\")[0];\r\n  }\r\n}","export default class DeviceInformer\r\n{\r\n    constructor()\r\n    {\r\n        if (!DeviceInformer.instance)\r\n        {\r\n\r\n            DeviceInformer.instance = this;\r\n        }\r\n\r\n        return DeviceInformer.instance;\r\n    }\r\n\r\n    init() {}\r\n\r\n    /**\r\n     * @description Get the device OS\r\n     * @returns {{name:String,version:String}}\r\n     */\r\n    getOS() {}\r\n\r\n    /**\r\n    * @description Get device model details\r\n    * @returns {{vendor:String,model:String}}\r\n    */\r\n    getDevice() {}\r\n\r\n    /**\r\n    * @description Get runtine engine - for browser only\r\n    * @returns {{name:String,version:String}}\r\n    */\r\n    getEngine() {}\r\n}","export {default as LogClient} from './log.client';\r\n\r\nexport {default as DeviceInformer} from './device.informer';\r\n\r\nexport {default as PlaynixBaseClient} from './playnix.base';","import { BaseLogClient, Event, Exception, Message, PlaynixOptions } from 'playnix-types';\r\nimport Utils from \"./utils\";\r\n\r\nexport default class LogClient extends BaseLogClient\r\n{\r\n    /**\r\n     * @protected\r\n     * @param {Message} message \r\n     */\r\n    _populateMessage(message)\r\n    {\r\n        message.os = this.deviceInformer.getOS();\r\n        message.engine = this.deviceInformer.getEngine();\r\n        message.device = this.deviceInformer.getDevice();\r\n        return message;\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @param {Error} error\r\n     */\r\n    _createException(error) \r\n    {\r\n        let exception = new Exception(error, true);\r\n        return exception;\r\n    }\r\n\r\n    /**\r\n    * @public\r\n    * @description Initializes playnix's logging client.\r\n    * @param {String} key\r\n    * @param {Object} options\r\n    * @param {Boolean} options.debug\r\n    * @param {String} options.uri\r\n    * @param {String} options.method\r\n    * @param {String} options.protocol\r\n    * @param {String} options.environment\r\n    */\r\n    init(key, options)\r\n    {\r\n        super.init(key, options);\r\n        this._xhttp = new XMLHttpRequest();\r\n        this._xhttp.onreadystatechange = this._onreadystatechange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @param {import('./device.informer').default} informer \r\n     */\r\n    registerDeviceInformer(informer)\r\n    {  \r\n        if (!informer)\r\n        {\r\n            throw new Error('NullArgument: DeviceInformer cannot be null');\r\n        }\r\n        this.deviceInformer = informer;\r\n        this.deviceInformer.init();\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {String} username \r\n     */\r\n    setAppUser(username)\r\n    {\r\n        if (!Utils.isNullOrEmpty(username))\r\n        {\r\n            this._user = String(username);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {String} version App version info\r\n     */\r\n    setAppVersion(version)\r\n    {\r\n        if (!Utils.isNullOrEmpty(version))\r\n        {\r\n            this._user_version = String(version);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param {Object|Array} data\r\n     */\r\n    setMetaContext(data)\r\n    {\r\n        if (!data) return;\r\n\r\n        if (!Array.isArray(data) && typeof data === 'object')\r\n        {\r\n            data = JSON.parse(JSON.stringify(data));\r\n        }\r\n        this._meta = data;\r\n    }\r\n\r\n    /**\r\n    * @public\r\n    * @param {String} message the custom message to log\r\n    * @param {Object} data additional data to send(must contains values of string, number, or boolean)\r\n    */\r\n    writeMessage(message)\r\n    {\r\n        let msg = new Message(message);\r\n        this._populateMessage(msg);\r\n        this._commit(msg);\r\n    }\r\n\r\n    /**\r\n    * @public\r\n    * @param {String} id event id\r\n    * @param {String} message event message\r\n    * @param {String} category event action\r\n    */\r\n    writeEvent(message, id, category)\r\n    {\r\n        let evt = new Event(id, message, category);\r\n        this._populateMessage(evt);\r\n        this._commit(evt);\r\n    }\r\n\r\n    /**\r\n    * @public\r\n    * @param {Error} error Error object to log.\r\n    * @param {Object} data additional data to send(must contains values of string, number, or boolean)\r\n    */\r\n    writeException(error, data)\r\n    {\r\n        if (!error) return;\r\n        \r\n        let ex = this._createException(error);\r\n        ex = this._populateMessage(ex);\r\n        if (data)\r\n        {\r\n            ex.extra = JSON.parse(JSON.stringify(data));\r\n        }\r\n        this._commit(ex);\r\n    }\r\n}","import { PlaynixOptions } from 'playnix-types';\r\n\r\nexport default class PlaynixBaseClient\r\n{\r\n    constructor()\r\n    {\r\n        if (!PlaynixBaseClient.singleton)\r\n        {\r\n            /**\r\n             * @private\r\n             * @type {String}\r\n             */\r\n            this.game = null;\r\n            /**\r\n             * @private\r\n             * @type {String}\r\n             */\r\n            this.token = null;\r\n            /**\r\n             * @private\r\n             * @type {PlaynixOptions}\r\n             */\r\n            this.options = null;\r\n\r\n            PlaynixBaseClient.singleton = this;\r\n        }\r\n\r\n        return PlaynixBaseClient.singleton;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    get isAuthenticated ()\r\n    {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * @public\r\n    * @description Initializes the playnix session.\r\n    * @param {String} key\r\n    * @param {Object} options\r\n    * @param {Boolean} options.debug\r\n    * @param {String} options.uri\r\n    * @param {String} options.method\r\n    * @param {String} options.protocol\r\n    * @param {String} options.environment\r\n    */\r\n    init(key, options)\r\n    {\r\n        this.game = key;\r\n        this._setup(key, options);\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @param {String} key \r\n     * @param {Object} options \r\n     */\r\n    _setup(key, options) {}\r\n\r\n    /**\r\n     * @public\r\n     * @description Verifies the user social login access token\r\n     * @param {String} sid Social prodiver user Id\r\n     * @param {String} provider Social provider ie {Goole, Facebook}\r\n     * @param {String} token Access token generated from social login\r\n     */\r\n    authenticate(sid, provider, token) {}\r\n\r\n    /**\r\n     * @public\r\n     * @description Saves player data\r\n     * @param {Object} data \r\n     */\r\n    saveGameData(data) {}\r\n\r\n    /**\r\n     * @public\r\n     * @description Loads player save data\r\n     */\r\n    loadGameData() {}\r\n\r\n    /**\r\n     * @public\r\n     * @description Checks player login status\r\n     * @returns {Object} player ref\r\n     */\r\n    getLoginStatus() {}\r\n}","import {LoggingConfig} from 'playnix-types';\r\n\r\nexport default class Utils\r\n{\r\n    constructor()\r\n    {\r\n        throw new Error('This is a static class');\r\n    }\r\n\r\n    static stringify(value)\r\n    {\r\n        if (value === null) return '';\r\n        if (typeof value === 'function' || typeof value === 'symbol' || typeof value === 'undefined') return '';\r\n        \r\n        let result = '';\r\n        \r\n        if (Array.isArray(value))\r\n        {\r\n            result = '';\r\n            for(let i = 0; i < value.length; i++)\r\n            {\r\n                let data_type = typeof value[i];\r\n                if (Utils.PRIMITIVES.indexOf(data_type) != -1)\r\n                {\r\n                    result += i===0 ? Utils.stringify(value[i]) : ' ' + Utils.stringify(value[i]);\r\n                }\r\n                else\r\n                {\r\n                    result += i===0 ? Utils.stringify(value[i]) : ', ' + Utils.stringify(value[i]);\r\n                }                \r\n            }\r\n        }\r\n        else if (typeof value === 'object')\r\n        {\r\n            let index = 0;\r\n            result = '{';\r\n            for (let key in value)\r\n            {\r\n                let node = key.toString() + ': ';\r\n                node += Array.isArray(value[key]) ? ('[' + Utils.stringify(value[key]) + ']') : Utils.stringify(value[key]);\r\n                result += index===0 ? node : ', ' + node;\r\n                index++;\r\n            }  \r\n            if (index === 0 && value.toString)\r\n            {\r\n                result += value.toString();\r\n            }  \r\n            result += '}';        \r\n        }\r\n        else\r\n        {\r\n            result += value;\r\n        }        \r\n    \r\n        return result;\r\n    }\r\n\r\n    static isLogLevel(value)\r\n    {\r\n        return value ? ([LoggingConfig.LOGS.ERROR,LoggingConfig.LOGS.INFO,LoggingConfig.LOGS.WARN].indexOf(value) !== -1) : false;\r\n    }\r\n\r\n    static isObject(what) \r\n    {\r\n        return typeof what === 'object' && what !== null;\r\n    }\r\n      \r\n    static isError(value) \r\n    {\r\n        switch ({}.toString.call(value)) \r\n        {\r\n          case '[object Error]':\r\n            return true;\r\n          case '[object Exception]':\r\n            return true;\r\n          case '[object DOMException]':\r\n            return true;\r\n          default:\r\n            return value instanceof Error;\r\n        }\r\n    }\r\n    \r\n    static isNull(value) \r\n    {\r\n        return value == null || value == undefined;\r\n    }\r\n\r\n    /**\r\n     * @param {String} value \r\n     */\r\n    static isNullOrEmpty(value)\r\n    {\r\n        if (value === null || value === undefined)\r\n            return true;\r\n\r\n        if (typeof value != 'string')\r\n        {\r\n            return true;\r\n        }\r\n\r\n        let text = value.replace('/ /g', '');\r\n\r\n        if (text.length === 0)\r\n            return true;\r\n    }\r\n}\r\n\r\nUtils.PRIMITIVES = ['undefined','boolean','number','string'];","import PlaynixOptions from './options';\r\nimport LoggingConfig from './config';\r\nimport Exception from './exception';\r\nimport Message from './message';\r\n\r\nexport default class BaseLogClient\r\n{\r\n    constructor()\r\n    {\r\n        if (!BaseLogClient.singleton)\r\n        {\r\n            /**\r\n             * @type {PlaynixOptions}\r\n             */\r\n            this.options = null;\r\n            /**\r\n             * @private\r\n             * @type {String}\r\n             */\r\n            this._app_key = null;\r\n            /**\r\n             * @private\r\n             * @type {XMLHttpRequest}\r\n             */\r\n            this._xhttp = null;\r\n            /**\r\n             * @private\r\n             */\r\n            this._meta = null;\r\n            /**\r\n             * @private\r\n             * @type {String}\r\n             */\r\n            this._user = null;\r\n            /**\r\n             * @private\r\n             * @type {String}\r\n             */\r\n            this._user_version = null;\r\n            /**\r\n             * @private\r\n             * @type {String}\r\n             */\r\n            this._client_id = null;\r\n            /**\r\n             * @private\r\n             * @type {{category:String, message:String, timestamp:Date, data:Object}[]}\r\n             */\r\n            this._breadcrumbs = [];\r\n\r\n            BaseLogClient.singleton = this;\r\n        }\r\n\r\n        return BaseLogClient.singleton;\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    _onreadystatechange ()\r\n    {\r\n        if (this._xhttp instanceof XMLHttpRequest)\r\n        {\r\n            if (this._xhttp.readyState === XMLHttpRequest.DONE && this._xhttp.status != 200 && this.options.debug && !this.options.console.log)\r\n            {\r\n                console.log(this._xhttp.responseText);\r\n            }\r\n        }\r\n    }\r\n\r\n    static get CONSTANTS()\r\n    {\r\n        return LoggingConfig;\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @param {Error} error\r\n     * @returns {Exception}\r\n     */\r\n    _createException(error) {}\r\n\r\n    /**\r\n     * @protected\r\n     * @param {Message} data \r\n     */\r\n    _commit(data)\r\n    {\r\n        if (this._meta)\r\n        {\r\n            data.meta = this._meta;\r\n        }\r\n        if (this._user)\r\n        {\r\n            data.user = this._user;\r\n        }\r\n        if (this._user_version)\r\n        {\r\n            data.appVersion = this._user_version;\r\n        }\r\n        if (this._client_id)\r\n        {\r\n            data.clientId = this._client_id;\r\n        }\r\n        if (this._app_key)\r\n        {\r\n            data.secret = this._app_key;\r\n        }\r\n        if (this.options.environment)\r\n        {\r\n            data.environment = this.options.environment;\r\n        }\r\n        if (this._breadcrumbs.length != 0)\r\n        {\r\n            data.breadcrumbs = this._breadcrumbs;\r\n        }\r\n        if (this._xhttp)\r\n        {\r\n            let path = '';\r\n            if (data.name == LoggingConfig.LOG_ACTION.ERROR && this.options.paths.error)\r\n            {\r\n                path = `/${this.options.paths.error}`;\r\n            } \r\n            if (data.name == LoggingConfig.LOG_ACTION.EVENT && this.options.paths.event)\r\n            {\r\n                path = `/${this.options.paths.event}`;\r\n            }\r\n            if (data.name == LoggingConfig.LOG_ACTION.MESSAGE && this.options.paths.message)\r\n            {\r\n                path = `/${this.options.paths.message}`;\r\n            }\r\n            this._xhttp.open(this.options.method, `${this.options.protocol}:${this.options.uri}${path}`, true);\r\n            if (this._xhttp instanceof XMLHttpRequest)\r\n            {\r\n                this._xhttp.setRequestHeader('Content-Type', 'application/json');\r\n            }        \r\n            this._xhttp.send(JSON.stringify(data));\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @param {Object} breadcrumb\r\n     * @param {String} breadcrumb.category\r\n     * @param {String} breadcrumb.message\r\n     * @param {Date} breadcrumb.timestamp\r\n     * @param {Object} breadcrumb.data\r\n     */\r\n    _extractBreadcrumb(breadcrumb)\r\n    {\r\n        if (!breadcrumb) return;\r\n\r\n        let values = {};\r\n\r\n        if (typeof breadcrumb.category == 'string')\r\n        {\r\n            values.category = breadcrumb.category;\r\n        }\r\n        if (typeof breadcrumb.message == 'string')\r\n        {\r\n            values.message = breadcrumb.message;\r\n        }\r\n        if (breadcrumb.timestamp instanceof Date)\r\n        {\r\n            values.timestamp = breadcrumb.timestamp.getTime();\r\n        }\r\n        else if (typeof breadcrumb.timestamp == 'number' || typeof breadcrumb.timestamp == 'bigint')\r\n        {\r\n            values.timestamp = breadcrumb.timestamp;\r\n        }\r\n        if (breadcrumb.data)\r\n        {\r\n            values.data = JSON.parse(JSON.stringify(breadcrumb.data));\r\n        }\r\n        \r\n        return values;\r\n    }\r\n    \r\n    /**\r\n    * @public\r\n    * @param {String} key - the client application api key\r\n    * @param {Object} options\r\n    * @param {Boolean} options.debug\r\n    * @param {String} options.uri\r\n    * @param {String} options.method\r\n    * @param {String} options.protocol\r\n    * @param {String} options.environment\r\n    * @param {Object} options.paths\r\n    * @param {String} options.paths.message\r\n    * @param {String} options.paths.event\r\n    * @param {String} options.paths.error\r\n    * @param {Object} options.console\r\n    * @param {Boolean} options.console.log\r\n    * @param {Boolean} options.console.warn\r\n    * @param {Boolean} options.console.error\r\n    */\r\n    init(key, options)\r\n    {      \r\n        options = options || {};   \r\n        if (!key)\r\n        {\r\n            throw new Error('InvalidArgument: Application client id cannot be null');\r\n        }\r\n        if (typeof key != 'string')\r\n        {\r\n            throw new Error('InvalidArgument: Client id is expecting a string value');\r\n        }\r\n        options = Object.assign(PlaynixOptions, options);\r\n        if (options.uri.indexOf('https:')!=-1)\r\n        {\r\n            options.uri = options.uri.replace('https:', '');\r\n            options.protocol = 'https';\r\n        }\r\n        else if (options.uri.indexOf('http:')!=-1)\r\n        {\r\n            options.uri = options.uri.replace('http:', '');\r\n            options.protocol = 'http';\r\n        } \r\n        options.method = options.method.toUpperCase();\r\n        if (['POST','PUT','DELETE'].indexOf(options.method) == -1)\r\n        {\r\n            throw new Error('InvalidArgument: Client submit method must either POST, PUT or DELETE');\r\n        }\r\n        this._app_key = key;\r\n        this.options = options;\r\n        this.generateClientId();\r\n    }\r\n\r\n    /**\r\n    * @public\r\n    * @description Sets breadcrumbs that will be attached to any outgoing message\r\n    * @param {Object} breadcrumb Breadcrumb data\r\n     * @param {String} breadcrumb.category\r\n     * @param {String} breadcrumb.message\r\n     * @param {Date} breadcrumb.timestamp\r\n     * @param {Object} breadcrumb.data\r\n    */\r\n    addBreadcrumb(breadcrumb) \r\n    {\r\n        let entry = this._extractBreadcrumb(breadcrumb);\r\n        if (entry)\r\n        {\r\n            this._breadcrumbs.push(entry);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * @public\r\n    * @description Clear breadcrumbs\r\n    */\r\n    clearBreadcrumbs() \r\n    {\r\n        this._breadcrumbs.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @description Generate and set a unique client Id\r\n     */\r\n    generateClientId() {}\r\n\r\n    /**\r\n    * @public\r\n    * @description Sends a custom info-level message.\r\n    * @param {String} message the custom message to log\r\n    */\r\n    writeMessage(message) {}\r\n\r\n    /**\r\n    * @public\r\n    * @description Captures an event message\r\n    * @param {String} id event id\r\n    * @param {String} message event message\r\n    * @param {String} category event category\r\n    */\r\n    writeEvent(id, message, category) {}\r\n\r\n    /**\r\n    * @public\r\n    * @description Sends a custom error exception.\r\n    * @param {Error} error Error object to log.\r\n    * @param {Object} data additional data to send(must contains values of string, number, or boolean)\r\n    */\r\n    writeException(error, data) {}\r\n\r\n    /**\r\n    * @public\r\n    * @description Sets custom metadata that will be submitted with each message\r\n    * @param {Object|Array} data custom meta data, can be user to store user details\r\n    */\r\n    setMetaContext(data) {}\r\n\r\n    /**\r\n    * @public\r\n    * @description Sets the user client version metadata\r\n    * @param {String} version App version info\r\n    */\r\n    setAppVersion(version) {}\r\n\r\n    /**\r\n    * @public\r\n    * @description Sets the client's current user metadata\r\n    * @param {String} username Username of the currently logged on user\r\n    */\r\n    setAppUser(username) {}\r\n}","const LoggingConfig = Object.freeze({\r\n    LOGS: {\r\n        INFO: 'info',\r\n        WARN: 'warn',\r\n        ERROR: 'error'\r\n    },\r\n    LOG_ACTION: {\r\n        MESSAGE: 'message',\r\n        ERROR: 'error',\r\n        EVENT: 'event'\r\n    }\r\n});\r\n\r\nexport default LoggingConfig;","import LoggingConfig from './config';\r\nimport Message from './message';\r\n\r\nexport default class Event extends Message\r\n{\r\n    /**\r\n     * @param {String} id\r\n     * @param {String} message\r\n     * @param {String} category\r\n     */\r\n    constructor(id, message, category)\r\n    {\r\n        super(message);\r\n        this.name = LoggingConfig.LOG_ACTION.EVENT;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.eventId = id;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.category = category;\r\n    }\r\n}","import LoggingConfig from './config';\r\nimport Message from './message';\r\n\r\nexport default class Exception extends Message\r\n{\r\n    /**\r\n     * @param {Error} error \r\n     */\r\n    constructor(error, handled = true)\r\n    {\r\n        super(error.message);\r\n        this.name = LoggingConfig.LOG_ACTION.ERROR;\r\n                \r\n        /**\r\n         * @type {Boolean}\r\n         */\r\n        this.handled = handled;\r\n        /**\r\n         * @type {Object[]}\r\n         */\r\n        this.stack = [];\r\n        /**\r\n         * @type {Object}\r\n         */\r\n        this.extra = {};\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.level = LoggingConfig.LOGS.ERROR;\r\n\r\n        this.addStack(error);\r\n    }    \r\n\r\n    addStack(error)\r\n    {\r\n        if (!error) return;\r\n       \r\n        let stack = {args:[], line:-1, column:-1, func:'', context:'', url:''};\r\n        \r\n        if (error.stack || error.stacktrace) \r\n            stack.context = error.stack || error.stacktrace;\r\n\r\n        if (error.fileName) \r\n            stack.url = error.fileName;\r\n        \r\n        if (error.lineNumber)\r\n            stack.line = error.lineNumber;\r\n\r\n        if (error.columnNumber)\r\n            stack.column = error.columnNumber;\r\n\r\n        if (error.toSource && !error.stack && !error.stacktrace)\r\n            stack.context = error.toSource();\r\n        this.stack.push(stack);\r\n    }\r\n}","export {default as BaseLogClient} from './client';\r\n\r\nexport {default as Event} from './event';\r\n\r\nexport {default as Exception} from './exception';\r\n\r\nexport {default as Message} from './message';\r\n\r\nexport {default as Response} from './response';\r\n\r\nexport {default as LoggingConfig} from './config';\r\n\r\nexport {default as PlaynixOptions} from './options';","import LoggingConfig from './config';\r\n\r\nexport default class Message\r\n{\r\n    /**\r\n     * @param {String} message \r\n     */\r\n    constructor(message)\r\n    {\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.name = LoggingConfig.LOG_ACTION.MESSAGE;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.message = message || '';\r\n        /**\r\n         * @type {Object}\r\n         */\r\n        this.device = null;\r\n        /**\r\n         * @type {Object}\r\n         */\r\n        this.engine = null;\r\n        /**\r\n         * @type {Object}\r\n         */\r\n        this.os = null;\r\n        /**\r\n         * @type {{category:String, message:String, timestamp:Date, data:Object}[]}\r\n         */\r\n        this.breadcrumbs = [];\r\n        /**\r\n         * @type {Number}\r\n         */\r\n        this.timestamp = Date.now();\r\n        /**\r\n         * @type {String}\r\n         */      \r\n        this.secret = null;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.appVersion = null;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.page = null;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.clientId = null;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.environment = null;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.runtime = 'javascript';\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.user = 'anonymous';\r\n        /**\r\n         * @type {Object}\r\n         */\r\n        this.meta = {};\r\n    }\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    get version()\r\n    {\r\n        return __VERSION__;\r\n    }\r\n}","\r\nconst API_URI = '{SERVER_URI}';\r\n\r\nconst PlaynixOptions = {\r\n    /**\r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n    debug: false,\r\n    /**\r\n     * @type {String}\r\n     */\r\n    uri: `${API_URI}`,\r\n    /**\r\n     * @type {String}\r\n     * @default POST\r\n     */\r\n    method: 'POST',\r\n    /**\r\n     * @type {String}\r\n     * @default https\r\n     */\r\n    protocol: 'https',\r\n    /**\r\n     * @type {String}\r\n     */\r\n    environment: null,\r\n    /**\r\n     * @type {{message:String, event:String, error:String}}\r\n     */\r\n    paths: {},\r\n    /**\r\n     * @type {{log:Boolean, warn:Boolean, error:Boolean}}\r\n     */\r\n    console: { log:false, warn:false, error:true }\r\n};\r\n\r\nexport default PlaynixOptions;","export default class Response\r\n{\r\n    /**\r\n     * @param {String} id\r\n     * @param {Number} status\r\n     * @param {String} detail\r\n     */\r\n    constructor(id, status, detail)\r\n    {\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.id = id || null;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.status = status || -1;\r\n        /**\r\n         * @type {String}\r\n         */\r\n        this.detail = detail || null;\r\n    }\r\n}","/*!@license\n * UAParser.js v0.7.28\n * Lightweight JavaScript-based User-Agent string parser\n * https://github.com/faisalman/ua-parser-js\n *\n * Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n * Licensed under MIT License\n */\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '0.7.28',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major', // deprecated\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 255;\n\n\n    ///////////\n    // Helper\n    //////////\n\n\n    var util = {\n        extend : function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        has : function (str1, str2) {\n            return typeof str1 === STR_TYPE ? str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1 : false;\n        },\n        lowerize : function (str) {\n            return str.toLowerCase();\n        },\n        major : function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g,'').split(\".\")[0] : undefined;\n        },\n        trim : function (str, len) {\n            str = str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n            return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n        }\n    };\n\n\n    ///////////////\n    // Map helper\n    //////////////\n\n\n    var mapper = {\n\n        rgx : function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length == 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length == 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length == 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        str : function (str, map) {\n\n            for (var i in map) {\n                // check if array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (util.has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (util.has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n        }\n    };\n\n\n    ///////////////\n    // String map\n    //////////////\n\n\n    var maps = {\n\n        browser : {\n            // Safari < 3.0\n            oldSafari : {\n                version : {\n                    '1.0'   : '/8',\n                    '1.2'   : '/1',\n                    '1.3'   : '/3',\n                    '2.0'   : '/412',\n                    '2.0.2' : '/416',\n                    '2.0.3' : '/417',\n                    '2.0.4' : '/419',\n                    '?'     : '/'\n                }\n            },\n            oldEdge : {\n                version : {\n                    '0.1'   : '12.',\n                    '21'    : '13.',\n                    '31'    : '14.',\n                    '39'    : '15.',\n                    '41'    : '16.',\n                    '42'    : '17.',\n                    '44'    : '18.'\n                }\n            }\n        },\n\n        os : {\n            windows : {\n                version : {\n                    'ME'        : '4.90',\n                    'NT 3.11'   : 'NT3.51',\n                    'NT 4.0'    : 'NT4.0',\n                    '2000'      : 'NT 5.0',\n                    'XP'        : ['NT 5.1', 'NT 5.2'],\n                    'Vista'     : 'NT 6.0',\n                    '7'         : 'NT 6.1',\n                    '8'         : 'NT 6.2',\n                    '8.1'       : 'NT 6.3',\n                    '10'        : ['NT 6.4', 'NT 10.0'],\n                    'RT'        : 'ARM'\n                }\n            }\n        }\n    };\n\n\n    //////////////\n    // Regex map\n    /////////////\n\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n            // breaking change (reserved for next major release):\n            ///edge\\/([\\w\\.]+)/i                                                  // Old Edge (Trident)\n            //], [[VERSION, mapper.str, maps.browser.oldEdge.version], [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera\\smini)\\/([\\w\\.-]+)/i,                                       // Opera Mini\n            /(opera\\s[mobiletab]{3,6})\\b.+version\\/([\\w\\.-]+)/i,                // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/\\s]+)([\\w\\.]+)/i,                         // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/\\s]+([\\w\\.]+)/i                                            // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, 'Opera Mini']], [\n            /\\sopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, 'Opera']], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]*)/i,     // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant\\s|iemobile|slim)(?:browser)?[\\/\\s]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(ba?idubrowser)[\\/\\s]?([\\w\\.]+)/i,                                 // Baidu Browser\n            /(?:ms|\\()(ie)\\s([\\w\\.]+)/i,                                        // Internet Explorer\n\n            // Webkit/KHTML based\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\\/([\\w\\.-]+)/i,\n                                                                                // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([\\w\\.]+)/i,         // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:[\\s\\/]uc?\\s?browser|(?:juc.+)ucweb)[\\/\\s]?([\\w\\.]+)/i           // UCBrowser\n            ], [VERSION, [NAME, 'UCBrowser']], [\n            /(?:windowswechat)?\\sqbcore\\/([\\w\\.]+)\\b.*(?:windowswechat)?/i      // WeChat Desktop for Windows Built-in Browser\n            ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[:\\s]([\\w\\.]{1,9})\\b.+like\\sgecko/i                     // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /yabrowser\\/([\\w\\.]+)/i                                             // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure Browser'], VERSION], [\n            /focus\\/([\\w\\.]+)/i                                                 // Firefox Focus\n            ], [VERSION, [NAME, 'Firefox Focus']], [\n            /opt\\/([\\w\\.]+)/i                                                   // Opera Touch\n            ], [VERSION, [NAME, 'Opera Touch']], [\n            /coc_coc_browser\\/([\\w\\.]+)/i                                       // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, 'Opera Coast']],\n            [/xiaomi\\/miuibrowser\\/([\\w\\.]+)/i                                  // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI Browser']], [\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, 'Firefox']], [\n            /(qihu|qhbrowser|qihoobrowser|360browser)/i                         // 360\n            ], [[NAME, '360 Browser']], [\n            /(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 Browser'], VERSION], [                       // Oculus/Samsung/Sailfish Browser\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /\\s(electron)\\/([\\w\\.]+)\\ssafari/i,                                 // Electron-based App\n            /(tesla)(?:\\sqtcarbrowser|\\/(20[12]\\d\\.[\\w\\.-]+))/i,                // Tesla\n            /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/\\s]?([\\w\\.]+)/i           // QQBrowser/Baidu App/2345 Browser\n            ], [NAME, VERSION], [\n            /(MetaSr)[\\/\\s]?([\\w\\.]+)/i,                                        // SouGouBrowser\n            /(LBBROWSER)/i                                                      // LieBao Browser\n            ], [NAME], [\n\n            // WebView\n            /;fbav\\/([\\w\\.]+);/i                                                // Facebook App for iOS & Android with version\n            ], [VERSION, [NAME, 'Facebook']], [\n            /FBAN\\/FBIOS|FB_IAB\\/FB4A/i                                         // Facebook App for iOS & Android without version\n            ], [[NAME, 'Facebook']], [\n            /safari\\s(line)\\/([\\w\\.]+)/i,                                       // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(chromium|instagram)[\\/\\s]([\\w\\.-]+)/i                             // Chromium/Instagram\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+)\\s.*safari\\//i                                     // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)|\\s)/i                                 // Chrome Headless\n            ], [VERSION, [NAME, 'Chrome Headless']], [\n\n            /\\swv\\).+(chrome)\\/([\\w\\.]+)/i                                      // Chrome WebView\n            ], [[NAME, 'Chrome WebView'], VERSION], [\n\n            /droid.+\\sversion\\/([\\w\\.]+)\\b.+(?:mobile\\ssafari|safari)/i         // Android Browser\n            ], [VERSION, [NAME, 'Android Browser']], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?([\\w\\.]+)/i      // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.]+)\\s.*mobile\\/\\w+\\s(safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w\\.]+)\\s.*(mobile\\s?safari|safari)/i                   // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i                     // Safari < 3.0\n            ], [NAME, [VERSION, mapper.str, maps.browser.oldSafari.version]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape)\\/([\\w\\.-]+)/i                                 // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /ile\\svr;\\srv:([\\w\\.]+)\\).+firefox/i                                // Firefox Reality\n            ], [VERSION, [NAME, 'Firefox Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([\\w\\.-]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)\\s[\\w\\s\\-]+\\/[\\w\\.]+$/i,                       // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+)\\s.+rv\\:.+gecko\\/\\d+/i,                        // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\/\\s]?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir\n            /(links)\\s\\(([\\w\\.]+)/i,                                            // Links\n            /(gobrowser)\\/?([\\w\\.]*)/i,                                         // GoBrowser\n            /(ice\\s?browser)\\/v?([\\w\\._]+)/i,                                   // ICE Browser\n            /(mosaic)[\\/\\s]([\\w\\.]+)/i                                          // Mosaic\n            ], [NAME, VERSION]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, util.lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|armv?8e?l?)\\b/i                                         // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows\\s(ce|mobile);\\sppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i                           // PowerPC\n            ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?:64|(?=v(?:[1-7]|[5-7]1)l?|;|eabi))|(?=atmel\\s)avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, util.lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            // Ordered by popularity\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus\\s10)/i\n            ], [MODEL, [VENDOR, 'Samsung'], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy\\snexus)/i,\n            /\\ssamsung[\\s-]([\\w-]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, 'Samsung'], [TYPE, MOBILE]], [\n\n            // Apple\n            /\\((ip(?:hone|od)[\\s\\w]*);/i                                        // iPod/iPhone\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [\n            /\\((ipad);[\\w\\s\\),;-]+apple/i,                                      // iPad\n            /applecoremedia\\/[\\w\\.]+\\s\\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [\n\n            // Huawei\n            /\\b((?:agr|ags[23]|bah2?|sht?)-a?[lw]\\d{2})/i,\n            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, TABLET]], [\n            /d\\/huawei([\\w\\s-]+)[;\\)]/i,\n            /\\b(nexus\\s6p|vog-[at]?l\\d\\d|ane-[at]?l[x\\d]\\d|eml-a?l\\d\\da?|lya-[at]?l\\d[\\dc]|clt-a?l\\d\\di?|ele-l\\d\\d)/i,\n            /\\b(\\w{2,4}-[atu][ln][01259][019])[;\\)\\s]/i\n            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\s\\w]+)(?:\\sbuild|\\))/i,                                   // Xiaomi POCO\n            /\\b;\\s(\\w+)\\sbuild\\/hm\\1/i,                                         // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[\\s\\-_]?note?[\\s_]?(?:\\d\\w)?)\\sbuild/i,                       // Xiaomi Hongmi\n            /\\b(redmi[\\s\\-_]?(?:note|k)?[\\w\\s_]+)(?:\\sbuild|\\))/i,              // Xiaomi Redmi\n            /\\b(mi[\\s\\-_]?(?:a\\d|one|one[\\s_]plus|note lte)?[\\s_]?(?:\\d?\\w?)[\\s_]?(?:plus)?)\\sbuild/i  // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\n            /\\b(mi[\\s\\-_]?(?:pad)(?:[\\w\\s_]+))(?:\\sbuild|\\))/i                  // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\n\n            // OPPO\n            /;\\s(\\w+)\\sbuild.+\\soppo/i,\n            /\\s(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /\\svivo\\s(\\w+)(?:\\sbuild|\\))/i,\n            /\\s(v[12]\\d{3}\\w?[at])(?:\\sbuild|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\s(rmx[12]\\d{3})(?:\\sbuild|;)/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\s(milestone|droid(?:[2-4x]|\\s(?:bionic|x2|pro|razr))?:?(\\s4g)?)\\b[\\w\\s]+build\\//i,\n            /\\smot(?:orola)?[\\s-](\\w*)/i,\n            /((?:moto[\\s\\w\\(\\)]+|xt\\d{3,4}|nexus\\s6)(?=\\sbuild|\\)))/i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [\n            /\\s(mz60\\d|xoom[\\s2]{0,2})\\sbuild\\//i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3})\\sbuild|\\s3\\.[\\s\\w;-]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [\n            /(lm-?f100[nv]?|nexus\\s[45])/i,\n            /lg[e;\\s\\/-]+((?!browser|netcast)\\w+)/i,\n            /\\blg(\\-?[\\d\\w]+)\\sbuild/i\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[\\w\\-\\s]+)/i,\n            /lenovo\\s?(s(?:5000|6000)(?:[\\w-]+)|tab(?:[\\s\\w]+)|yt[\\d\\w-]{6}|tb[\\d\\w-]{6})/i        // Lenovo tablets\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia\\s\\d+)/i,\n            /nokia[\\s_-]?([\\w\\.-]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /droid.+;\\s(pixel\\sc)[\\s)]/i                                        // Google Pixel C\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [\n            /droid.+;\\s(pixel[\\s\\daxl]{0,6})(?:\\sbuild|\\))/i                    // Google Pixel\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+\\s([c-g]\\d{4}|so[-l]\\w+|xq-a\\w[4-7][12])(?=\\sbuild\\/|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [\n            /sony\\stablet\\s[ps]\\sbuild\\//i,\n            /(?:sony)?sgp\\w+(?:\\sbuild\\/|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, 'Sony'], [TYPE, TABLET]], [\n\n            // OnePlus\n            /\\s(kb2005|in20[12]5|be20[12][59])\\b/i,\n            /\\ba000(1)\\sbuild/i,                                                // OnePlus\n            /\\boneplus\\s(a\\d{4})[\\s)]/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi)(\\sbuild\\/|\\))/i,                                    // Kindle Fire without Silk\n            /(kf[a-z]+)(\\sbuild\\/|\\)).+silk\\//i                                 // Kindle Fire HD\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\n            /(sd|kf)[0349hijorstuw]+(\\sbuild\\/|\\)).+silk\\//i                    // Fire Phone\n            ], [[MODEL, 'Fire Phone'], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /\\((playbook);[\\w\\s\\),;-]+(rim)/i                                   // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10;\\s(\\w+)/i                                                   // BlackBerry 10\n            ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+|nexus\\s7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, 'ASUS'], [TYPE, TABLET]], [\n            /\\s(z[es]6[027][01][km][ls]|zenfone\\s\\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, 'ASUS'], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus\\s9)/i                                                       // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[;_\\s-]{1,2}([\\w\\s]+(?=\\)|\\sbuild)|\\w+)/i,                    // HTC\n\n            // ZTE\n            /(zte)-(\\w*)/i,\n            /(alcatel|geeksphone|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid[x\\d\\.\\s;]+\\s([ab][1-7]\\-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+;\\s(m[1-5]\\snote)\\sbuild/i,\n            /\\bmz-([\\w-]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\\s_-]?([\\w-]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp)\\s([\\w\\s]+\\w)/i,                                               // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft);\\s(lumia[\\s\\w]+)/i,                                    // Microsoft Lumia\n            /(lenovo)[_\\s-]?([\\w-]+)/i,                                         // Lenovo\n            /linux;.+(jolla);/i,                                                // Jolla\n            /droid.+;\\s(oppo)\\s?([\\w\\s]+)\\sbuild/i                              // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(archos)\\s(gamepad2?)/i,                                           // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /\\s(nook)[\\w\\s]+build\\/(\\w+)/i,                                     // Nook\n            /(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i,                                 // Dell Streak\n            /[;\\/]\\s?(le[\\s\\-]+pan)[\\s\\-]+(\\w{1,9})\\sbuild/i,                   // Le Pan Tablets\n            /[;\\/]\\s?(trinity)[\\-\\s]*(t\\d{3})\\sbuild/i,                         // Trinity Tablets\n            /\\b(gigaset)[\\s\\-]+(q\\w{1,9})\\sbuild/i,                             // Gigaset Tablets\n            /\\b(vodafone)\\s([\\w\\s]+)(?:\\)|\\sbuild)/i                            // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /\\s(surface\\sduo)\\s/i                                               // Surface Duo\n            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, TABLET]], [\n            /droid\\s[\\d\\.]+;\\s(fp\\du?)\\sbuild/i\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /\\s(u304aa)\\sbuild/i                                                // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /sie-(\\w*)/i                                                        // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /[;\\/]\\s?(rct\\w+)\\sbuild/i                                          // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /[;\\/\\s](venue[\\d\\s]{2,7})\\sbuild/i                                 // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /[;\\/]\\s?(q(?:mv|ta)\\w+)\\sbuild/i                                   // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /[;\\/]\\s(?:barnes[&\\s]+noble\\s|bn[rt])([\\w\\s\\+]*)\\sbuild/i          // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /[;\\/]\\s(tm\\d{3}\\w+)\\sbuild/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /;\\s(k88)\\sbuild/i                                                  // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /;\\s(nx\\d{3}j)\\sbuild/i                                             // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /[;\\/]\\s?(gen\\d{3})\\sbuild.*49h/i                                   // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /[;\\/]\\s?(zur\\d{3})\\sbuild/i                                        // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /[;\\/]\\s?((zeki)?tb.*\\b)\\sbuild/i                                   // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /[;\\/]\\s([yr]\\d{2})\\sbuild/i,\n            /[;\\/]\\s(dragon[\\-\\s]+touch\\s|dt)(\\w{5})\\sbuild/i                   // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /[;\\/]\\s?(ns-?\\w{0,9})\\sbuild/i                                     // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /[;\\/]\\s?((nxa|Next)-?\\w{0,9})\\sbuild/i                             // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /[;\\/]\\s?(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05]))\\sbuild/i\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [                    // Voice Xtreme Phones\n            /[;\\/]\\s?(lvtel\\-)?(v1[12])\\sbuild/i                                // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /;\\s(ph-1)\\s/i\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [                // Essential PH-1\n            /[;\\/]\\s?(v(100md|700na|7011|917g).*\\b)\\sbuild/i                    // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /[;\\/]\\s?(trio[\\s\\w\\-\\.]+)\\sbuild/i                                 // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /[;\\/]\\s?tu_(1491)\\sbuild/i                                         // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w\\s]+)\\sbuild/i                                           // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint)\\s(\\w+)/i                                                  // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [\n            /droid\\s[\\d\\.]+;\\s(cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i     // Zebra\n            ], [MODEL, [VENDOR, 'Zebra'], [TYPE, TABLET]], [\n            /droid\\s[\\d\\.]+;\\s(ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, 'Zebra'], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /\\s(ouya)\\s/i,                                                      // Ouya\n            /(nintendo)\\s([wids3utch]+)/i                                       // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+;\\s(shield)\\sbuild/i                                        // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation\\s[345portablevi]+)/i                                  // Playstation\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [\n            /[\\s\\(;](xbox(?:\\sone)?(?!;\\sxbox))[\\s\\);]/i                        // Microsoft Xbox\n            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [\n            /(?:linux;\\snetcast.+smarttv|lg\\snetcast\\.tv-201\\d)/i,              // LG SmartTV\n            ], [[VENDOR, 'LG'], [TYPE, SMARTTV]], [\n            /(apple)\\s?tv/i                                                     // Apple TV\n            ], [VENDOR, [MODEL, 'Apple TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, 'Chromecast'], [VENDOR, 'Google'], [TYPE, SMARTTV]], [\n            /droid.+aft([\\w])(\\sbuild\\/|\\))/i                                   // Fire TV\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i                                              // Sharp\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+\\s+\\([\\w\\s]*;\\s*(\\w[^;]*);([^;]*)/i            // HbbTV devices\n            ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [\n            /[\\s\\/\\(](android\\s|smart[-\\s]?|opera\\s)tv[;\\)\\s]/i                 // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app\\/[\\d\\.]+\\s/i                                         // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /droid.+;\\s(glass)\\s\\d/i                                            // Google Glass\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [\n            /droid\\s[\\d\\.]+;\\s(wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, 'Zebra'], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?:\\sqtcarbrowser|\\/20[12]\\d\\.[\\w\\.-]+)/i                   // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: build|\\) applewebkit).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?;\\s([^;]+?)(?: build|\\) applewebkit).+?(?! mobile) safari/i  // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\s(tablet|tab)[;\\/]/i,                                             // Unidentifiable Tablet\n            /\\s(mobile)(?:[;\\/]|\\ssafari)/i                                     // Unidentifiable Mobile\n            ], [[TYPE, util.lowerize]], [\n            /(android[\\w\\.\\s\\-]{0,9});.+build/i                                 // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']], [\n            /(phone)/i\n            ], [[TYPE, MOBILE]]\n        ],\n\n        engine : [[\n\n            /windows.+\\sedge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, 'EdgeHTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i,                          // KHTML/Tasman/Links\n            /(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i                                      // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft\\s(windows)\\s(vista|xp)/i                                 // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows)\\snt\\s6\\.2;\\s(arm)/i,                                     // Windows RT\n            /(windows\\sphone(?:\\sos)*)[\\s\\/]?([\\d\\.\\s\\w]*)/i,                   // Windows Phone\n            /(windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)(?!.+xbox)/i\n            ], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [\n            /(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os\\s([\\w]+)\\slike\\smac|;\\sopera)/i,          // iOS\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac\\sos\\sx)\\s?([\\w\\s\\.]*)/i,\n            /(macintosh|mac(?=_powerpc)\\s)(?!.+haiku)/i                         // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes                                                      // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki/Sailfish OS\n            /(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|sailfish|contiki)[\\/\\s-]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/\\s]([\\w\\.]+)/i,                                    // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, 'BlackBerry']], [\n            /(?:symbian\\s?os|symbos|s60(?=;)|series60)[\\/\\s-]?([\\w\\.]*)/i       // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla.+\\(mobile;.+gecko.+firefox/i                               // Firefox OS\n            ], [[NAME, 'Firefox OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, 'Chromecast']], [\n            /(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i                                       // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Console\n            /(nintendo|playstation)\\s([wids345portablevuch]+)/i,                // Nintendo/Playstation\n            /(xbox);\\s+xbox\\s([^\\);]+)/i,                                       // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // GNU/Linux based\n            /(mint)[\\/\\s\\(\\)]?(\\w*)/i,                                          // Mint\n            /(mageia|vectorlinux)[;\\s]/i,                                       // Mageia/VectorLinux\n            /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?=\\slinux)|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus|raspbian)(?:\\sgnu\\/linux)?(?:\\slinux)?[\\/\\s-]?(?!chrom|package)([\\w\\.-]*)/i,\n                                                                                // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware\n                                                                                // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus\n            /(hurd|linux)\\s?([\\w\\.]*)/i,                                        // Hurd/Linux\n            /(gnu)\\s?([\\w\\.]*)/i,                                               // GNU\n\n            // BSD based\n            /\\s([frentopc-]{0,4}bsd|dragonfly)\\s?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,  // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly\n            /(haiku)\\s(\\w+)/i                                                   // Haiku\n            ], [NAME, VERSION], [\n\n            // Other\n            /(sunos)\\s?([\\w\\.\\d]*)/i                                            // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[\\/\\s-]?([\\w\\.]*)/i,                             // Solaris\n            /(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.])*/i,                                // AIX\n            /(plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos|openvms|fuchsia)/i,  // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS/Fuchsia\n            /(unix)\\s?([\\w\\.]*)/i                                               // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n\n    /////////////////\n    // Constructor\n    ////////////////\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === 'object') {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _ua = ua || ((typeof window !== 'undefined' && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var _rgxmap = extensions ? util.extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var _browser = { name: undefined, version: undefined };\n            mapper.rgx.call(_browser, _ua, _rgxmap.browser);\n            _browser.major = util.major(_browser.version); // deprecated\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = { architecture: undefined };\n            mapper.rgx.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = { vendor: undefined, model: undefined, type: undefined };\n            mapper.rgx.call(_device, _ua, _rgxmap.device);\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = { name: undefined, version: undefined };\n            mapper.rgx.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = { name: undefined, version: undefined };\n            mapper.rgx.call(_os, _ua, _rgxmap.os);\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? util.trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER = {\n        NAME    : NAME,\n        MAJOR   : MAJOR, // deprecated\n        VERSION : VERSION\n    };\n    UAParser.CPU = {\n        ARCHITECTURE : ARCHITECTURE\n    };\n    UAParser.DEVICE = {\n        MODEL   : MODEL,\n        VENDOR  : VENDOR,\n        TYPE    : TYPE,\n        CONSOLE : CONSOLE,\n        MOBILE  : MOBILE,\n        SMARTTV : SMARTTV,\n        TABLET  : TABLET,\n        WEARABLE: WEARABLE,\n        EMBEDDED: EMBEDDED\n    };\n    UAParser.ENGINE = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n    UAParser.OS = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n\n    ///////////\n    // Export\n    //////////\n\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === 'function' && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== 'undefined') {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== 'undefined' && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (uastring) {\n            parser.setUA(uastring);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export {default as playnix} from './playnix';"],"names":["PlaynixBaseClient","lognetic","PlaynixOptions","PlaynixSession","key","options","init","method","url","xhttp","XMLHttpRequest","open","setRequestHeader","sid","provider","token","data","client","game","Promise","resolve","reject","xhr","_createXHR","protocol","uri","onload","status","resp","JSON","parse","responseText","statusText","onerror","send","stringify","Error","singleton","default","playnix"],"sourceRoot":""}